# Generated by Django 5.1.7 on 2025-08-13 01:21

import django.core.validators
import django.db.models.deletion
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("medecin", "0002_initial"),
        ("medical", "0005_locationblocprestations_prix_supplement_duree_and_more"),
        ("patients", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="LocationBloc",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "date_operation",
                    models.DateField(db_index=True, verbose_name="Date de l'opération"),
                ),
                (
                    "heure_debut",
                    models.TimeField(
                        blank=True, null=True, verbose_name="Heure de début"
                    ),
                ),
                (
                    "heure_fin",
                    models.TimeField(
                        blank=True, null=True, verbose_name="Heure de fin"
                    ),
                ),
                (
                    "nom_acte",
                    models.CharField(
                        db_index=True,
                        max_length=255,
                        verbose_name="Nom de l'acte chirurgical",
                    ),
                ),
                (
                    "type_tarification",
                    models.CharField(
                        choices=[("FORFAIT", "Forfaitaire"), ("DUREE", "À la durée")],
                        default="DUREE",
                        max_length=10,
                        verbose_name="Type de tarification",
                    ),
                ),
                (
                    "duree_prevue",
                    models.PositiveIntegerField(
                        blank=True,
                        null=True,
                        validators=[django.core.validators.MinValueValidator(1)],
                        verbose_name="Durée prévue (minutes)",
                    ),
                ),
                (
                    "duree_reelle",
                    models.PositiveIntegerField(
                        blank=True,
                        help_text="Durée réelle de l'opération",
                        null=True,
                        validators=[django.core.validators.MinValueValidator(1)],
                        verbose_name="Durée réelle (minutes)",
                    ),
                ),
                (
                    "prix_final",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=10,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0.00"))
                        ],
                        verbose_name="Prix final",
                    ),
                ),
                (
                    "prix_supplement_duree",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("0.00"),
                        help_text="Supplément ajouté si la durée réelle dépasse celle du forfait",
                        max_digits=10,
                        verbose_name="Supplément durée",
                    ),
                ),
                (
                    "statut",
                    models.CharField(
                        choices=[
                            ("PLANIFIE", "Planifié"),
                            ("EN_COURS", "En cours"),
                            ("TERMINE", "Terminé"),
                            ("ANNULE", "Annulé"),
                        ],
                        default="PLANIFIE",
                        max_length=15,
                        verbose_name="Statut",
                    ),
                ),
                (
                    "observations",
                    models.TextField(blank=True, verbose_name="Observations"),
                ),
                (
                    "date_creation",
                    models.DateTimeField(auto_now_add=True, db_index=True),
                ),
                ("date_modification", models.DateTimeField(auto_now=True)),
                (
                    "bloc",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="locations",
                        to="medical.bloc",
                        verbose_name="Bloc opératoire",
                    ),
                ),
                (
                    "cree_par",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="locations_bloc_creees",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Créé par",
                    ),
                ),
                (
                    "forfait",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="locations",
                        to="medical.forfait",
                        verbose_name="Forfait appliqué",
                    ),
                ),
                (
                    "medecin",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="locations_bloc",
                        to="medecin.medecin",
                        verbose_name="Médecin responsable",
                    ),
                ),
                (
                    "patient",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="locations_bloc",
                        to="patients.patient",
                        verbose_name="Patient",
                    ),
                ),
                (
                    "prestation_liee",
                    models.ForeignKey(
                        blank=True,
                        help_text="Liaison optionnelle avec une prestation médicale",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="locations_bloc_liees",
                        to="medical.prestation",
                        verbose_name="Prestation liée (optionnel)",
                    ),
                ),
            ],
            options={
                "verbose_name": "Location de bloc",
                "verbose_name_plural": "Locations de bloc",
            },
        ),
        migrations.CreateModel(
            name="LocationBlocAudit",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "champ",
                    models.CharField(max_length=100, verbose_name="Champ modifié"),
                ),
                (
                    "ancienne_valeur",
                    models.TextField(
                        blank=True, null=True, verbose_name="Valeur avant modification"
                    ),
                ),
                (
                    "nouvelle_valeur",
                    models.TextField(
                        blank=True, null=True, verbose_name="Valeur après modification"
                    ),
                ),
                (
                    "date_modification",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Date de modification"
                    ),
                ),
                (
                    "location",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="audits",
                        to="medical.locationbloc",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Utilisateur",
                    ),
                ),
            ],
            options={
                "verbose_name": "Audit de location de bloc",
                "verbose_name_plural": "Audits de locations de bloc",
                "ordering": ["-date_modification"],
            },
        ),
        migrations.DeleteModel(
            name="LocationBlocPrestations",
        ),
        migrations.AddIndex(
            model_name="locationbloc",
            index=models.Index(
                fields=["bloc", "date_operation"], name="medical_loc_bloc_id_ddbe36_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="locationbloc",
            index=models.Index(
                fields=["patient"], name="medical_loc_patient_4591bb_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="locationbloc",
            index=models.Index(
                fields=["medecin"], name="medical_loc_medecin_4e9943_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="locationbloc",
            index=models.Index(fields=["statut"], name="medical_loc_statut_6de97e_idx"),
        ),
        migrations.AddIndex(
            model_name="locationbloc",
            index=models.Index(
                fields=["date_operation", "statut"],
                name="medical_loc_date_op_3eed7d_idx",
            ),
        ),
        migrations.AddConstraint(
            model_name="locationbloc",
            constraint=models.UniqueConstraint(
                condition=models.Q(("statut__in", ["PLANIFIE", "EN_COURS"])),
                fields=("bloc", "date_operation", "heure_debut"),
                name="unique_bloc_datetime_active",
            ),
        ),
    ]
