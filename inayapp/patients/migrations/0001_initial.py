# Generated by Django 5.1.7 on 2025-08-19 19:48

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("medecin", "0002_initial"),
        ("rh", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="Patient",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("first_name", models.CharField(max_length=100, verbose_name="Prénom")),
                ("last_name", models.CharField(max_length=100, verbose_name="Nom")),
                (
                    "date_of_birth",
                    models.DateField(
                        blank=True, null=True, verbose_name="Date de naissance"
                    ),
                ),
                (
                    "place_of_birth",
                    models.CharField(
                        blank=True,
                        max_length=100,
                        null=True,
                        verbose_name="Lieu de naissance",
                    ),
                ),
                (
                    "social_security_number",
                    models.CharField(
                        blank=True,
                        max_length=15,
                        null=True,
                        unique=True,
                        verbose_name="Numéro de sécurité sociale",
                    ),
                ),
                (
                    "nom_de_assure",
                    models.CharField(
                        blank=True,
                        max_length=100,
                        null=True,
                        verbose_name="Nom de l'assuré",
                    ),
                ),
                (
                    "securite_sociale",
                    models.CharField(
                        blank=True,
                        choices=[("1", "CNAS"), ("2", "CASNOS")],
                        max_length=1,
                        null=True,
                        verbose_name="Sécurité sociale",
                    ),
                ),
                (
                    "gender",
                    models.CharField(
                        choices=[("M", "Masculin"), ("F", "Féminin")],
                        max_length=1,
                        verbose_name="Genre",
                    ),
                ),
                (
                    "phone_number",
                    models.CharField(
                        blank=True, max_length=20, null=True, verbose_name="Téléphone"
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True, max_length=254, null=True, verbose_name="Email"
                    ),
                ),
                (
                    "address",
                    models.TextField(blank=True, null=True, verbose_name="Adresse"),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        default=django.utils.timezone.now,
                        editable=False,
                        verbose_name="Créé le",
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Mis à jour le"),
                ),
                ("is_active", models.BooleanField(default=True, verbose_name="Actif")),
                (
                    "id_created_par",
                    models.ForeignKey(
                        blank=True,
                        db_column="created_par",
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="patients_id_created_par",
                        to="rh.personnel",
                    ),
                ),
                (
                    "id_updated_par",
                    models.ForeignKey(
                        blank=True,
                        db_column="id_updated_par",
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="patients_id_updated_par",
                        to="rh.personnel",
                    ),
                ),
            ],
            options={
                "verbose_name": "Patient",
                "verbose_name_plural": "Patients",
                "ordering": ["last_name", "first_name"],
            },
        ),
        migrations.CreateModel(
            name="DossierMedical",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "groupe_sanguin",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("A+", "A+"),
                            ("A-", "A-"),
                            ("B+", "B+"),
                            ("B-", "B-"),
                            ("AB+", "AB+"),
                            ("AB-", "AB-"),
                            ("O+", "O+"),
                            ("O-", "O-"),
                        ],
                        max_length=3,
                        null=True,
                        verbose_name="Groupe sanguin",
                    ),
                ),
                (
                    "poids",
                    models.FloatField(
                        blank=True,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(0.1),
                            django.core.validators.MaxValueValidator(1000),
                        ],
                        verbose_name="Poids (kg)",
                    ),
                ),
                (
                    "taille",
                    models.FloatField(
                        blank=True,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(10),
                            django.core.validators.MaxValueValidator(300),
                        ],
                        verbose_name="Taille (cm)",
                    ),
                ),
                (
                    "allergies",
                    models.TextField(
                        blank=True,
                        help_text="Liste des allergies du patient",
                        verbose_name="Allergies connues",
                    ),
                ),
                (
                    "antecedents_medicaux",
                    models.TextField(
                        blank=True,
                        help_text="Historique médical important",
                        verbose_name="Antécédents médicaux",
                    ),
                ),
                (
                    "antecedents_chirurgicaux",
                    models.TextField(
                        blank=True,
                        help_text="Historique des interventions chirurgicales",
                        verbose_name="Antécédents chirurgicaux",
                    ),
                ),
                (
                    "traitements_actuels",
                    models.TextField(
                        blank=True,
                        help_text="Médicaments et traitements actuels",
                        verbose_name="Traitements en cours",
                    ),
                ),
                (
                    "personne_contact_urgence",
                    models.CharField(
                        blank=True,
                        help_text="Personne à contacter en cas d'urgence",
                        max_length=200,
                        verbose_name="Contact d'urgence",
                    ),
                ),
                (
                    "telephone_contact_urgence",
                    models.CharField(
                        blank=True,
                        max_length=20,
                        verbose_name="Téléphone contact d'urgence",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Date de création"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Dernière mise à jour"
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="dossiers_crees",
                        to="rh.personnel",
                        verbose_name="Créé par",
                    ),
                ),
                (
                    "medecin_traitant",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="patients_suivis",
                        to="medecin.medecin",
                        verbose_name="Médecin traitant",
                    ),
                ),
                (
                    "patient",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="dossier_medical",
                        to="patients.patient",
                        verbose_name="Patient associé",
                    ),
                ),
            ],
            options={
                "verbose_name": "Dossier Médical",
                "verbose_name_plural": "Dossiers Médicaux",
            },
        ),
        migrations.AddIndex(
            model_name="patient",
            index=models.Index(
                fields=["last_name", "first_name"],
                name="patients_pa_last_na_1b32a7_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="patient",
            index=models.Index(
                fields=["social_security_number"], name="patients_pa_social__3ac3d4_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="patient",
            index=models.Index(
                fields=["is_active"], name="patients_pa_is_acti_54ba9f_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="dossiermedical",
            index=models.Index(
                fields=["groupe_sanguin"], name="patients_do_groupe__543615_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="dossiermedical",
            index=models.Index(
                fields=["created_at"], name="patients_do_created_0e56e0_idx"
            ),
        ),
    ]
