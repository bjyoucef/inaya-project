# Generated by Django 5.1.7 on 2025-08-19 19:48

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("finance", "0001_initial"),
        ("medical", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="AnvizConfiguration",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        blank=True, max_length=100, null=True, verbose_name="Nom"
                    ),
                ),
                (
                    "ip_address",
                    models.GenericIPAddressField(
                        protocol="IPv4", verbose_name="Adresse IP"
                    ),
                ),
                (
                    "username",
                    models.CharField(max_length=100, verbose_name="Nom d'utilisateur"),
                ),
                (
                    "password",
                    models.CharField(max_length=100, verbose_name="Mot de passe"),
                ),
                (
                    "session_timeout",
                    models.PositiveIntegerField(
                        default=1800, verbose_name="Délai de session (secondes)"
                    ),
                ),
                ("is_active", models.BooleanField(default=True, verbose_name="Actif")),
                (
                    "last_modified",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Dernière modification"
                    ),
                ),
            ],
            options={
                "verbose_name": "Configuration Pointeuse",
                "verbose_name_plural": "Configuration Pointeuse",
            },
        ),
        migrations.CreateModel(
            name="Employee",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "anviz_id",
                    models.BigIntegerField(unique=True, verbose_name="ID Anviz"),
                ),
                ("name", models.CharField(max_length=100, verbose_name="Nom complet")),
                (
                    "reference_start",
                    models.TimeField(
                        blank=True,
                        null=True,
                        verbose_name="Heure de début de référence",
                    ),
                ),
                (
                    "reference_end",
                    models.TimeField(
                        blank=True, null=True, verbose_name="Heure de fin de référence"
                    ),
                ),
                (
                    "last_updated",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Dernière mise à jour"
                    ),
                ),
                (
                    "cycle_start_date",
                    models.DateTimeField(
                        blank=True,
                        null=True,
                        verbose_name="Date de début du cycle de rotation",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Date de création"
                    ),
                ),
            ],
            options={
                "verbose_name": "Employé (Pointeuse)",
                "verbose_name_plural": "Employés (Pointeuse)",
            },
        ),
        migrations.CreateModel(
            name="HonorairesActe",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name_acte", models.CharField(default="Unknown", max_length=50)),
                (
                    "prix_acte",
                    models.DecimalField(decimal_places=2, default=0.0, max_digits=10),
                ),
            ],
            options={
                "verbose_name": "Honoraires Acte",
                "verbose_name_plural": "Honoraires Actes",
            },
        ),
        migrations.CreateModel(
            name="JourFerie",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date", models.DateField(unique=True, verbose_name="Date")),
                ("name", models.CharField(max_length=100, verbose_name="Nom")),
            ],
            options={
                "verbose_name": "Jour férié",
                "verbose_name_plural": "Jours fériés",
            },
        ),
        migrations.CreateModel(
            name="Poste",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("label", models.CharField(max_length=100, unique=True)),
            ],
            options={
                "verbose_name": "Poste",
                "verbose_name_plural": "Postes",
            },
        ),
        migrations.CreateModel(
            name="Shift",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("code", models.CharField(max_length=10, unique=True)),
                ("label", models.CharField(max_length=50)),
                ("debut", models.TimeField(blank=True, null=True)),
                ("fin", models.TimeField(blank=True, null=True)),
            ],
            options={
                "verbose_name": "Shift",
                "verbose_name_plural": "Shifts",
            },
        ),
        migrations.CreateModel(
            name="ShiftType",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        max_length=100, verbose_name="Nom du type de contrat"
                    ),
                ),
                (
                    "category",
                    models.CharField(
                        choices=[
                            ("fixed", "Horaires fixes"),
                            ("rotating", "Rotation"),
                            ("flexible", "Horaires flexibles"),
                            ("custom", "Personnalisé"),
                        ],
                        default="fixed",
                        max_length=20,
                    ),
                ),
                (
                    "work_days",
                    models.CharField(
                        blank=True,
                        help_text="Lundi=0, Dimanche=6. Ex: '0,1,2,3,4' pour Lun-Ven",
                        max_length=50,
                        null=True,
                        verbose_name="Jours travaillés (0-6, séparés par des virgules)",
                    ),
                ),
                (
                    "start_time",
                    models.TimeField(
                        blank=True, null=True, verbose_name="Heure de début"
                    ),
                ),
                (
                    "end_time",
                    models.TimeField(
                        blank=True, null=True, verbose_name="Heure de fin"
                    ),
                ),
                (
                    "work_days_count",
                    models.PositiveIntegerField(
                        blank=True, null=True, verbose_name="Jours travaillés par cycle"
                    ),
                ),
                (
                    "rest_days_count",
                    models.PositiveIntegerField(
                        blank=True, null=True, verbose_name="Jours de repos par cycle"
                    ),
                ),
                (
                    "rotation_start_time",
                    models.TimeField(
                        blank=True, null=True, verbose_name="Heure de début (rotation)"
                    ),
                ),
                (
                    "rotation_end_time",
                    models.TimeField(
                        blank=True, null=True, verbose_name="Heure de fin (rotation)"
                    ),
                ),
                (
                    "shift_duration_hours",
                    models.FloatField(
                        blank=True, null=True, verbose_name="Durée du shift en heures"
                    ),
                ),
                (
                    "break_duration_minutes",
                    models.PositiveIntegerField(
                        blank=True,
                        default=0,
                        null=True,
                        verbose_name="Durée de pause en minutes",
                    ),
                ),
                (
                    "entry_tolerance_minutes",
                    models.PositiveIntegerField(
                        default=120, verbose_name="Tolérance entrée (minutes)"
                    ),
                ),
                (
                    "exit_tolerance_minutes",
                    models.PositiveIntegerField(
                        default=120, verbose_name="Tolérance sortie (minutes)"
                    ),
                ),
                (
                    "is_night_shift",
                    models.BooleanField(default=False, verbose_name="Poste de nuit"),
                ),
                (
                    "crosses_midnight",
                    models.BooleanField(default=False, verbose_name="Traverse minuit"),
                ),
                (
                    "considers_weekends_holidays",
                    models.BooleanField(
                        default=False,
                        verbose_name="Considère les week-ends et jours fériés",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="GlobalSalaryConfig",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "cnas_employer_rate",
                    models.DecimalField(
                        decimal_places=2,
                        default=26.0,
                        max_digits=5,
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(100),
                        ],
                        verbose_name="Taux CNAS employeur (%)",
                    ),
                ),
                (
                    "cnas_employee_rate",
                    models.DecimalField(
                        decimal_places=2,
                        default=9.0,
                        max_digits=5,
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(100),
                        ],
                        verbose_name="Taux CNAS employé (%)",
                    ),
                ),
                (
                    "daily_meal_allowance",
                    models.DecimalField(
                        decimal_places=2,
                        default=300.0,
                        max_digits=10,
                        verbose_name="Indemnité repas journalière (DZA)",
                    ),
                ),
                (
                    "daily_transport_allowance",
                    models.DecimalField(
                        decimal_places=2,
                        default=200.0,
                        max_digits=10,
                        verbose_name="Indemnité transport journalière (DZA)",
                    ),
                ),
                (
                    "overtime_hourly_rate",
                    models.DecimalField(
                        decimal_places=2,
                        default=1.2,
                        max_digits=6,
                        verbose_name="Taux horaire heures supplémentaires",
                    ),
                ),
                (
                    "holiday_hourly_rate",
                    models.DecimalField(
                        decimal_places=2,
                        default=1.2,
                        max_digits=6,
                        verbose_name="Taux horaire heures holiday",
                    ),
                ),
                (
                    "daily_absence_penalty",
                    models.DecimalField(
                        decimal_places=2,
                        default=1.0,
                        max_digits=6,
                        verbose_name="Pénalité absence journalière",
                    ),
                ),
                (
                    "late_minute_penalty",
                    models.DecimalField(
                        decimal_places=2,
                        default=1.0,
                        max_digits=6,
                        verbose_name="Pénalité par minute de retard",
                    ),
                ),
                ("update_date", models.DateTimeField(auto_now=True)),
                (
                    "updated_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Dernière modification par",
                    ),
                ),
            ],
            options={
                "verbose_name": "Configuration Salariale Globale",
                "verbose_name_plural": "Configuration Salariale Globale",
            },
        ),
        migrations.CreateModel(
            name="IRGBracket",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "min_amount",
                    models.DecimalField(
                        decimal_places=2, max_digits=12, verbose_name="Montant minimum"
                    ),
                ),
                (
                    "max_amount",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=12,
                        null=True,
                        verbose_name="Montant maximum",
                    ),
                ),
                (
                    "tax_rate",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=5,
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(100),
                        ],
                        verbose_name="Taux d'imposition (%)",
                    ),
                ),
                (
                    "config",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="irg_brackets",
                        to="rh.globalsalaryconfig",
                    ),
                ),
            ],
            options={
                "verbose_name": "Tranche IRG",
                "verbose_name_plural": "Tranches IRG",
                "ordering": ["min_amount"],
            },
        ),
        migrations.CreateModel(
            name="Personnel",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("nom_prenom", models.CharField(default="Unknown", max_length=100)),
                ("telephone", models.CharField(blank=True, max_length=15, null=True)),
                (
                    "salaire",
                    models.DecimalField(
                        decimal_places=2,
                        default=0.0,
                        max_digits=10,
                        verbose_name="Salaire mensuel",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True, null=True)),
                ("updated_at", models.DateTimeField(auto_now=True, null=True)),
                ("statut_activite", models.BooleanField(default=True)),
                ("use_in_planning", models.BooleanField(default=False)),
                ("salary_advance_request", models.BooleanField(default=False)),
                (
                    "employee",
                    models.OneToOneField(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="personnel",
                        to="rh.employee",
                        verbose_name="Fiche Pointeuse",
                    ),
                ),
                (
                    "service",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="personnels",
                        to="medical.service",
                    ),
                ),
                (
                    "user",
                    models.OneToOneField(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "poste",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="rh.poste",
                        verbose_name="Poste occupé",
                    ),
                ),
            ],
            options={
                "ordering": ["nom_prenom"],
                "permissions": [
                    (
                        "create_for_others",
                        "Peut créer des demandes pour d'autres employés",
                    )
                ],
            },
        ),
        migrations.CreateModel(
            name="LeaveRequest",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("start_date", models.DateField()),
                ("end_date", models.DateField()),
                (
                    "leave_type",
                    models.CharField(
                        choices=[
                            ("VAC", "Congé annuel"),
                            ("SIC", "Congé maladie"),
                            ("MAT", "Congé maternité"),
                            ("PAT", "Congé paternité"),
                            ("AUT", "Autre"),
                        ],
                        default="VAC",
                        max_length=8,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("PENDING", "En attente"),
                            ("APPROVED", "Approuvé"),
                            ("REJECTED", "Rejeté"),
                            ("CANCELED", "Annulé"),
                        ],
                        default="PENDING",
                        max_length=8,
                    ),
                ),
                ("reason", models.TextField()),
                (
                    "rejection_reason",
                    models.TextField(
                        blank=True, null=True, verbose_name="Motif de rejet"
                    ),
                ),
                ("processed_at", models.DateTimeField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "processed_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="processed_leave_requests",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "personnel",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="leave_requests",
                        to="rh.personnel",
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
                "permissions": [
                    ("process_leave_request", "Peut traiter les demandes de congé")
                ],
            },
        ),
        migrations.CreateModel(
            name="DemandeHeuresSupplementaires",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "numero_demande",
                    models.CharField(blank=True, max_length=20, unique=True),
                ),
                (
                    "date_debut",
                    models.DateTimeField(verbose_name="Date et heure de début"),
                ),
                ("date_fin", models.DateTimeField(verbose_name="Date et heure de fin")),
                (
                    "nombre_heures",
                    models.DecimalField(
                        decimal_places=2, max_digits=5, verbose_name="Nombre d'heures"
                    ),
                ),
                (
                    "motif",
                    models.CharField(
                        choices=[
                            ("urgence_medicale", "Urgence médicale"),
                            ("absence_collegue", "Absence collègue"),
                            ("surcroit_activite", "Surcroît d'activité"),
                            ("garde_exceptionnelle", "Garde exceptionnelle"),
                            ("autre", "Autre"),
                        ],
                        max_length=20,
                        verbose_name="Motif",
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True, null=True, verbose_name="Description détaillée"
                    ),
                ),
                (
                    "statut",
                    models.CharField(
                        choices=[
                            ("en_attente", "En attente"),
                            ("approuvee", "Approuvée"),
                            ("refusee", "Refusée"),
                            ("annulee", "Annulée"),
                        ],
                        default="en_attente",
                        max_length=20,
                        verbose_name="Statut",
                    ),
                ),
                (
                    "date_validation",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Date de validation"
                    ),
                ),
                (
                    "commentaire_validation",
                    models.TextField(
                        blank=True, null=True, verbose_name="Commentaire de validation"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="demandes_creees",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "personnel_demandeur",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="demandes_heures_sup",
                        to="rh.personnel",
                        verbose_name="Personnel demandeur",
                    ),
                ),
                (
                    "personnel_validateur",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="validations_heures_sup",
                        to="rh.personnel",
                        verbose_name="Personnel validateur",
                    ),
                ),
            ],
            options={
                "verbose_name": "Demande d'heures supplémentaires",
                "verbose_name_plural": "Demandes d'heures supplémentaires",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="Planning",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("shift_date", models.DateField()),
                ("created_at", models.DateTimeField(auto_now_add=True, null=True)),
                (
                    "prix",
                    models.DecimalField(decimal_places=2, default=0.0, max_digits=10),
                ),
                (
                    "prix_acte",
                    models.DecimalField(decimal_places=2, default=0.0, max_digits=10),
                ),
                (
                    "paiement",
                    models.DecimalField(decimal_places=2, default=0.0, max_digits=10),
                ),
                ("pointage_created_at", models.DateTimeField(blank=True, null=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="created_plannings",
                        to="rh.personnel",
                    ),
                ),
                (
                    "decharge",
                    models.ForeignKey(
                        blank=True,
                        db_column="decharge_id",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="plannings",
                        to="finance.decharges",
                    ),
                ),
                (
                    "employee",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.RESTRICT,
                        related_name="plannings",
                        to="rh.personnel",
                    ),
                ),
                (
                    "pointage_created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="pointed_plannings",
                        to="rh.personnel",
                    ),
                ),
                (
                    "service",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.RESTRICT,
                        to="medical.service",
                    ),
                ),
                (
                    "poste",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.RESTRICT,
                        to="rh.poste",
                    ),
                ),
                (
                    "shift",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="rh.shift",
                    ),
                ),
            ],
            options={
                "permissions": (
                    ("acces_aux_plannings", "Accès aux plannings"),
                    ("creer_planning", "Créer un planning"),
                    ("modifier_planning", "Modifier un planning"),
                    ("supprimer_planning", "Supprimer un planning"),
                    ("exporter_planning", "Exporter un planning"),
                ),
            },
        ),
        migrations.CreateModel(
            name="PointagesActes",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("nbr_actes", models.PositiveIntegerField()),
                (
                    "acte",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.RESTRICT,
                        to="rh.honorairesacte",
                    ),
                ),
                (
                    "planning",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="pointages_actes",
                        to="rh.planning",
                    ),
                ),
            ],
            options={
                "verbose_name": "Pointage Acte",
                "verbose_name_plural": "Pointages Actes",
            },
        ),
        migrations.AddField(
            model_name="honorairesacte",
            name="poste",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.RESTRICT,
                to="rh.poste",
            ),
        ),
        migrations.CreateModel(
            name="SalaryAdvanceRequest",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("amount", models.DecimalField(decimal_places=2, max_digits=10)),
                ("request_date", models.DateField(default=django.utils.timezone.now)),
                ("payment_date", models.DateField()),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("PENDING", "En attente"),
                            ("APPROVED", "Approuvée"),
                            ("REJECTED", "Rejetée"),
                            ("CANCELED", "Annulée"),
                        ],
                        default="PENDING",
                        max_length=8,
                    ),
                ),
                ("reason", models.TextField(blank=True, null=True)),
                (
                    "rejection_reason",
                    models.TextField(
                        blank=True, null=True, verbose_name="Motif de rejet"
                    ),
                ),
                ("processed_at", models.DateTimeField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "personnel",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="salary_advances",
                        to="rh.personnel",
                    ),
                ),
                (
                    "processed_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="processed_salary_advances",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
                "permissions": [
                    (
                        "process_salaryadvance_request",
                        "Peut traiter les demandes d'avance sur salaire",
                    )
                ],
            },
        ),
        migrations.AddField(
            model_name="employee",
            name="shift_type",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="rh.shifttype",
                verbose_name="Type de contrat",
            ),
        ),
        migrations.CreateModel(
            name="Tarif_Gardes",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "prix",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=10,
                        null=True,
                        verbose_name="Prix (€)",
                    ),
                ),
                (
                    "salaire",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=12,
                        null=True,
                        verbose_name="Salaire (€)",
                    ),
                ),
                (
                    "poste",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="tarifs",
                        to="rh.poste",
                    ),
                ),
                (
                    "service",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="tarifs",
                        to="medical.service",
                    ),
                ),
                (
                    "shift",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="tarifs",
                        to="rh.shift",
                    ),
                ),
            ],
            options={
                "verbose_name": "Tarif_Gardes",
                "verbose_name_plural": "Tarif_Gardes",
            },
        ),
        migrations.CreateModel(
            name="Pointage",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("check_time", models.DateTimeField(verbose_name="Heure de pointage")),
                (
                    "synced_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Date de synchronisation"
                    ),
                ),
                (
                    "employee",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="attendances",
                        to="rh.employee",
                        verbose_name="Employé",
                    ),
                ),
            ],
            options={
                "verbose_name": "Pointage",
                "verbose_name_plural": "Pointages",
                "indexes": [
                    models.Index(
                        fields=["check_time"], name="rh_pointage_check_t_a3785c_idx"
                    ),
                    models.Index(
                        fields=["employee", "check_time"],
                        name="rh_pointage_employe_464a2d_idx",
                    ),
                ],
                "unique_together": {("employee", "check_time")},
            },
        ),
        migrations.AddConstraint(
            model_name="planning",
            constraint=models.UniqueConstraint(
                fields=("employee", "shift_date"),
                name="unique_employee_per_date",
                violation_error_message="Cet employé est déjà planifié pour cette date.",
            ),
        ),
        migrations.AlterUniqueTogether(
            name="tarif_gardes",
            unique_together={("poste", "service", "shift")},
        ),
    ]
